version: '3.6'
x-cache-from:
  - &app-cache-from
    cache_from:
      - ${NGINX_IMAGE:-iw/nginx}
      - ${PHP_IMAGE:-iw/php}
  - &node-cache-from
    cache_from:
      - ${NODE_IMAGE:-iw/node}

services:

  db:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pwd
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    ports:
      - '5432:5432'

  pgadmin:
    image: dpage/pgadmin4:4.18
    environment:
        PGADMIN_DEFAULT_EMAIL: user@linuxhint.com
        PGADMIN_DEFAULT_PASSWORD: pwd
        PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "db:pgsql-server"

  php:
    image: ${PHP_IMAGE:-iw/php}
    build:
      context: ./app
      target: app_php
      <<: *app-cache-from
    volumes:
      - ./app:/srv/app:rw
      - ./app/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini
      #- app-front:/srv/app/public/build
      - app-sf-cache:/srv/app/var

  node:
    image: ${NODE_IMAGE:-iw/node}
    build:
      context: ./app
      dockerfile: Dockerfile.node
      <<: *node-cache-from
    command: sh -c "yarn install; yarn watch"
    working_dir: /home/node/app
    depends_on:
      - php
    volumes:
      - ./app:/home/node/app

  nginx:
    image: ${NGINX_IMAGE:-iw/nginx}
    build:
      context: ./app
      target: app_nginx
      <<: *app-cache-from
    depends_on:
      - php
      - node
    volumes:
      - ./app/public:/srv/app/public:ro
      #- app-front:/srv/app/public/build:ro
    ports:
      - "8082:80"

volumes:
  db-data: {}
  app-sf-cache: {}
  app-front: {}
  pgadmin-data: {}
